,drop,replacement,scaling,selection,model,precision,recall,f1,accuracy,auc_roc,tn,fp,fn,tp,params,samplers,kus
0,FunctionTransformer(),SimpleImputer(),StandardScaler(),FunctionTransformer(),MLPClassifier(),0.5694444444444444,0.3942307692307692,0.46590909090909094,0.7164404223227753,0.6289835164835165,786,124,252,164,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', StandardScaler()), ('selection', FunctionTransformer()), ('model', MLPClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': StandardScaler(), 'selection': FunctionTransformer(), 'model': MLPClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__copy': True, 'scaling__with_mean': True, 'scaling__with_std': True, 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'model__activation': 'relu', 'model__alpha': 0.0001, 'model__batch_size': 'auto', 'model__beta_1': 0.9, 'model__beta_2': 0.999, 'model__early_stopping': False, 'model__epsilon': 1e-08, 'model__hidden_layer_sizes': (100,), 'model__learning_rate': 'constant', 'model__learning_rate_init': 0.001, 'model__max_fun': 15000, 'model__max_iter': 200, 'model__momentum': 0.9, 'model__n_iter_no_change': 10, 'model__nesterovs_momentum': True, 'model__power_t': 0.5, 'model__random_state': None, 'model__shuffle': True, 'model__solver': 'adam', 'model__tol': 0.0001, 'model__validation_fraction': 0.1, 'model__verbose': False, 'model__warm_start': False}",,
1,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),MLPClassifier(),0.5828025477707006,0.43990384615384615,0.5013698630136987,0.7254901960784313,0.6479739010989012,779,131,233,183,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('model', MLPClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'model': MLPClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'model__activation': 'relu', 'model__alpha': 0.0001, 'model__batch_size': 'auto', 'model__beta_1': 0.9, 'model__beta_2': 0.999, 'model__early_stopping': False, 'model__epsilon': 1e-08, 'model__hidden_layer_sizes': (100,), 'model__learning_rate': 'constant', 'model__learning_rate_init': 0.001, 'model__max_fun': 15000, 'model__max_iter': 200, 'model__momentum': 0.9, 'model__n_iter_no_change': 10, 'model__nesterovs_momentum': True, 'model__power_t': 0.5, 'model__random_state': None, 'model__shuffle': True, 'model__solver': 'adam', 'model__tol': 0.0001, 'model__validation_fraction': 0.1, 'model__verbose': False, 'model__warm_start': False}",,
2,FunctionTransformer(),SimpleImputer(),StandardScaler(),FunctionTransformer(),KNeighborsClassifier(),0.5956112852664577,0.4567307692307692,0.5170068027210885,0.7322775263951734,0.6574862637362637,781,129,226,190,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', StandardScaler()), ('selection', FunctionTransformer()), ('model', KNeighborsClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': StandardScaler(), 'selection': FunctionTransformer(), 'model': KNeighborsClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__copy': True, 'scaling__with_mean': True, 'scaling__with_std': True, 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'model__algorithm': 'auto', 'model__leaf_size': 30, 'model__metric': 'minkowski', 'model__metric_params': None, 'model__n_jobs': None, 'model__n_neighbors': 5, 'model__p': 2, 'model__weights': 'uniform'}",,
3,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),KNeighborsClassifier(),0.6050955414012739,0.4567307692307692,0.5205479452054794,0.7360482654600302,0.6602335164835165,786,124,226,190,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('model', KNeighborsClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'model': KNeighborsClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'model__algorithm': 'auto', 'model__leaf_size': 30, 'model__metric': 'minkowski', 'model__metric_params': None, 'model__n_jobs': None, 'model__n_neighbors': 5, 'model__p': 2, 'model__weights': 'uniform'}",,
4,FunctionTransformer(),SimpleImputer(),StandardScaler(),FunctionTransformer(),LogisticRegression(),0.5783132530120482,0.34615384615384615,0.4330827067669173,0.7156862745098039,0.6153846153846154,805,105,272,144,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', StandardScaler()), ('selection', FunctionTransformer()), ('model', LogisticRegression())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': StandardScaler(), 'selection': FunctionTransformer(), 'model': LogisticRegression(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__copy': True, 'scaling__with_mean': True, 'scaling__with_std': True, 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'model__C': 1.0, 'model__class_weight': None, 'model__dual': False, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__l1_ratio': None, 'model__max_iter': 100, 'model__multi_class': 'auto', 'model__n_jobs': None, 'model__penalty': 'l2', 'model__random_state': None, 'model__solver': 'lbfgs', 'model__tol': 0.0001, 'model__verbose': 0, 'model__warm_start': False}",,
5,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),LogisticRegression(),0.32323232323232326,1.0,0.4885496183206107,0.3431372549019608,0.5214285714285714,39,871,0,416,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('samplers', SMOTEENN()), ('model', LogisticRegression())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'samplers': SMOTEENN(), 'model': LogisticRegression(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'samplers__enn': None, 'samplers__n_jobs': None, 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'samplers__smote': None, 'model__C': 1.0, 'model__class_weight': None, 'model__dual': False, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__l1_ratio': None, 'model__max_iter': 100, 'model__multi_class': 'auto', 'model__n_jobs': None, 'model__penalty': 'l2', 'model__random_state': None, 'model__solver': 'lbfgs', 'model__tol': 0.0001, 'model__verbose': 0, 'model__warm_start': False}",SMOTEENN(),
6,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),MLPClassifier(),0.5236486486486487,0.7451923076923077,0.6150793650793651,0.7073906485671192,0.7176510989010989,628,282,106,310,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('samplers', RandomOverSampler()), ('model', MLPClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'samplers': RandomOverSampler(), 'model': MLPClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'samplers__shrinkage': None, 'model__activation': 'relu', 'model__alpha': 0.0001, 'model__batch_size': 'auto', 'model__beta_1': 0.9, 'model__beta_2': 0.999, 'model__early_stopping': False, 'model__epsilon': 1e-08, 'model__hidden_layer_sizes': (100,), 'model__learning_rate': 'constant', 'model__learning_rate_init': 0.001, 'model__max_fun': 15000, 'model__max_iter': 200, 'model__momentum': 0.9, 'model__n_iter_no_change': 10, 'model__nesterovs_momentum': True, 'model__power_t': 0.5, 'model__random_state': None, 'model__shuffle': True, 'model__solver': 'adam', 'model__tol': 0.0001, 'model__validation_fraction': 0.1, 'model__verbose': False, 'model__warm_start': False}",RandomOverSampler(),
7,FunctionTransformer(),SimpleImputer(),StandardScaler(),FunctionTransformer(),LogisticRegression(),0.5142857142857142,0.7355769230769231,0.6053412462908012,0.6990950226244343,0.7089972527472528,621,289,110,306,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', StandardScaler()), ('selection', FunctionTransformer()), ('samplers', SMOTEENN()), ('model', LogisticRegression())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': StandardScaler(), 'selection': FunctionTransformer(), 'samplers': SMOTEENN(), 'model': LogisticRegression(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__copy': True, 'scaling__with_mean': True, 'scaling__with_std': True, 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'samplers__enn': None, 'samplers__n_jobs': None, 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'samplers__smote': None, 'model__C': 1.0, 'model__class_weight': None, 'model__dual': False, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__l1_ratio': None, 'model__max_iter': 100, 'model__multi_class': 'auto', 'model__n_jobs': None, 'model__penalty': 'l2', 'model__random_state': None, 'model__solver': 'lbfgs', 'model__tol': 0.0001, 'model__verbose': 0, 'model__warm_start': False}",SMOTEENN(),
8,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),MLPClassifier(),0.5236486486486487,0.7451923076923077,0.6150793650793651,0.7073906485671192,0.7176510989010989,628,282,106,310,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('samplers', RandomUnderSampler()), ('model', MLPClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'samplers': RandomUnderSampler(), 'model': MLPClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'samplers__random_state': None, 'samplers__replacement': False, 'samplers__sampling_strategy': 'auto', 'model__activation': 'relu', 'model__alpha': 0.0001, 'model__batch_size': 'auto', 'model__beta_1': 0.9, 'model__beta_2': 0.999, 'model__early_stopping': False, 'model__epsilon': 1e-08, 'model__hidden_layer_sizes': (100,), 'model__learning_rate': 'constant', 'model__learning_rate_init': 0.001, 'model__max_fun': 15000, 'model__max_iter': 200, 'model__momentum': 0.9, 'model__n_iter_no_change': 10, 'model__nesterovs_momentum': True, 'model__power_t': 0.5, 'model__random_state': None, 'model__shuffle': True, 'model__solver': 'adam', 'model__tol': 0.0001, 'model__validation_fraction': 0.1, 'model__verbose': False, 'model__warm_start': False}",RandomUnderSampler(),
9,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),MLPClassifier(),0.5236486486486487,0.7451923076923077,0.6150793650793651,0.7073906485671192,0.7176510989010989,628,282,106,310,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('samplers', SMOTE()), ('model', MLPClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'samplers': SMOTE(), 'model': MLPClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'samplers__k_neighbors': 5, 'samplers__n_jobs': None, 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'model__activation': 'relu', 'model__alpha': 0.0001, 'model__batch_size': 'auto', 'model__beta_1': 0.9, 'model__beta_2': 0.999, 'model__early_stopping': False, 'model__epsilon': 1e-08, 'model__hidden_layer_sizes': (100,), 'model__learning_rate': 'constant', 'model__learning_rate_init': 0.001, 'model__max_fun': 15000, 'model__max_iter': 200, 'model__momentum': 0.9, 'model__n_iter_no_change': 10, 'model__nesterovs_momentum': True, 'model__power_t': 0.5, 'model__random_state': None, 'model__shuffle': True, 'model__solver': 'adam', 'model__tol': 0.0001, 'model__validation_fraction': 0.1, 'model__verbose': False, 'model__warm_start': False}",SMOTE(),
10,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),LogisticRegression(),0.4855072463768116,0.8052884615384616,0.6057866184448463,0.6711915535444947,0.7075892857142858,555,355,81,335,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2})), ('model', LogisticRegression())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2}), 'model': LogisticRegression(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7f5cdbab40d0>, 'kus__kw_args': {'k': 2, 'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'model__C': 1.0, 'model__class_weight': None, 'model__dual': False, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__l1_ratio': None, 'model__max_iter': 100, 'model__multi_class': 'auto', 'model__n_jobs': None, 'model__penalty': 'l2', 'model__random_state': None, 'model__solver': 'lbfgs', 'model__tol': 0.0001, 'model__verbose': 0, 'model__warm_start': False}",,"FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2})"
11,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),LinearSVC(),0.48625180897250364,0.8076923076923077,0.6070460704607046,0.6719457013574661,0.7087912087912089,555,355,80,336,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2})), ('model', LinearSVC())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2}), 'model': LinearSVC(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7f5cdbab40d0>, 'kus__kw_args': {'k': 2, 'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'model__C': 1.0, 'model__class_weight': None, 'model__dual': True, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__loss': 'squared_hinge', 'model__max_iter': 1000, 'model__multi_class': 'ovr', 'model__penalty': 'l2', 'model__random_state': None, 'model__tol': 0.0001, 'model__verbose': 0}",,"FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2})"
12,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),MLPClassifier(),0.481962481962482,0.8028846153846154,0.6023444544634807,0.667420814479638,0.7041895604395605,551,359,82,334,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2})), ('model', MLPClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2}), 'model': MLPClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7f5cdbab40d0>, 'kus__kw_args': {'k': 2, 'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'model__activation': 'relu', 'model__alpha': 0.0001, 'model__batch_size': 'auto', 'model__beta_1': 0.9, 'model__beta_2': 0.999, 'model__early_stopping': False, 'model__epsilon': 1e-08, 'model__hidden_layer_sizes': (100,), 'model__learning_rate': 'constant', 'model__learning_rate_init': 0.001, 'model__max_fun': 15000, 'model__max_iter': 200, 'model__momentum': 0.9, 'model__n_iter_no_change': 10, 'model__nesterovs_momentum': True, 'model__power_t': 0.5, 'model__random_state': None, 'model__shuffle': True, 'model__solver': 'adam', 'model__tol': 0.0001, 'model__validation_fraction': 0.1, 'model__verbose': False, 'model__warm_start': False}",,"FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2})"
13,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),KNeighborsClassifier(),0.487369985141159,0.7884615384615384,0.6023875114784205,0.6734539969834088,0.7046703296703296,565,345,88,328,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2})), ('model', KNeighborsClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2}), 'model': KNeighborsClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7f5cdbab40d0>, 'kus__kw_args': {'k': 2, 'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'model__algorithm': 'auto', 'model__leaf_size': 30, 'model__metric': 'minkowski', 'model__metric_params': None, 'model__n_jobs': None, 'model__n_neighbors': 5, 'model__p': 2, 'model__weights': 'uniform'}",,"FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2})"
14,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),RandomForestClassifier(random_state=42),0.47083926031294454,0.7956730769230769,0.5915996425379804,0.6553544494720965,0.693440934065934,538,372,85,331,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2})), ('model', RandomForestClassifier(random_state=42))], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2}), 'model': RandomForestClassifier(random_state=42), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7f5cdbab40d0>, 'kus__kw_args': {'k': 2, 'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'model__bootstrap': True, 'model__ccp_alpha': 0.0, 'model__class_weight': None, 'model__criterion': 'gini', 'model__max_depth': None, 'model__max_features': 'sqrt', 'model__max_leaf_nodes': None, 'model__max_samples': None, 'model__min_impurity_decrease': 0.0, 'model__min_samples_leaf': 1, 'model__min_samples_split': 2, 'model__min_weight_fraction_leaf': 0.0, 'model__n_estimators': 100, 'model__n_jobs': None, 'model__oob_score': False, 'model__random_state': 42, 'model__verbose': 0, 'model__warm_start': False}",,"FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2})"
15,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),LinearSVC(),0.4755244755244755,0.8173076923076923,0.601237842617153,0.6598793363499246,0.7026098901098901,535,375,76,340,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2})), ('samplers', RandomUnderSampler()), ('model', LinearSVC())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2}), 'samplers': RandomUnderSampler(), 'model': LinearSVC(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7f5cdbab40d0>, 'kus__kw_args': {'k': 2, 'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'samplers__random_state': None, 'samplers__replacement': False, 'samplers__sampling_strategy': 'auto', 'model__C': 1.0, 'model__class_weight': None, 'model__dual': True, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__loss': 'squared_hinge', 'model__max_iter': 1000, 'model__multi_class': 'ovr', 'model__penalty': 'l2', 'model__random_state': None, 'model__tol': 0.0001, 'model__verbose': 0}",RandomUnderSampler(),"FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2})"
16,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),LinearSVC(),0.4755244755244755,0.8173076923076923,0.601237842617153,0.6598793363499246,0.7026098901098901,535,375,76,340,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2})), ('samplers', RandomOverSampler()), ('model', LinearSVC())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2}), 'samplers': RandomOverSampler(), 'model': LinearSVC(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7f5cdbab40d0>, 'kus__kw_args': {'k': 2, 'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'samplers__shrinkage': None, 'model__C': 1.0, 'model__class_weight': None, 'model__dual': True, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__loss': 'squared_hinge', 'model__max_iter': 1000, 'model__multi_class': 'ovr', 'model__penalty': 'l2', 'model__random_state': None, 'model__tol': 0.0001, 'model__verbose': 0}",RandomOverSampler(),"FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2})"
17,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),LinearSVC(),0.4755244755244755,0.8173076923076923,0.601237842617153,0.6598793363499246,0.7026098901098901,535,375,76,340,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2})), ('samplers', SMOTE()), ('model', LinearSVC())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2}), 'samplers': SMOTE(), 'model': LinearSVC(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7f5cdbab40d0>, 'kus__kw_args': {'k': 2, 'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'samplers__k_neighbors': 5, 'samplers__n_jobs': None, 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'model__C': 1.0, 'model__class_weight': None, 'model__dual': True, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__loss': 'squared_hinge', 'model__max_iter': 1000, 'model__multi_class': 'ovr', 'model__penalty': 'l2', 'model__random_state': None, 'model__tol': 0.0001, 'model__verbose': 0}",SMOTE(),"FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2})"
18,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),LogisticRegression(),0.48668639053254437,0.7908653846153846,0.6025641025641026,0.6726998491704375,0.7047733516483516,563,347,87,329,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2})), ('samplers', RandomUnderSampler()), ('model', LogisticRegression())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2}), 'samplers': RandomUnderSampler(), 'model': LogisticRegression(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7f5cdbab40d0>, 'kus__kw_args': {'k': 2, 'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'samplers__random_state': None, 'samplers__replacement': False, 'samplers__sampling_strategy': 'auto', 'model__C': 1.0, 'model__class_weight': None, 'model__dual': False, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__l1_ratio': None, 'model__max_iter': 100, 'model__multi_class': 'auto', 'model__n_jobs': None, 'model__penalty': 'l2', 'model__random_state': None, 'model__solver': 'lbfgs', 'model__tol': 0.0001, 'model__verbose': 0, 'model__warm_start': False}",RandomUnderSampler(),"FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2})"
19,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),LogisticRegression(),0.48668639053254437,0.7908653846153846,0.6025641025641026,0.6726998491704375,0.7047733516483516,563,347,87,329,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2})), ('samplers', SMOTEENN()), ('model', LogisticRegression())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2}), 'samplers': SMOTEENN(), 'model': LogisticRegression(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7f5cdbab40d0>, 'kus__kw_args': {'k': 2, 'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'samplers__enn': None, 'samplers__n_jobs': None, 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'samplers__smote': None, 'model__C': 1.0, 'model__class_weight': None, 'model__dual': False, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__l1_ratio': None, 'model__max_iter': 100, 'model__multi_class': 'auto', 'model__n_jobs': None, 'model__penalty': 'l2', 'model__random_state': None, 'model__solver': 'lbfgs', 'model__tol': 0.0001, 'model__verbose': 0, 'model__warm_start': False}",SMOTEENN(),"FunctionSampler(func=<function kMeansUnderSampling at 0x7f5cdbab40d0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7f5cdbaa7d90>,
                         'k': 2})"
