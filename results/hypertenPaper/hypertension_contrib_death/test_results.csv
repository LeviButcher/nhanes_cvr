,drop,replacement,scaling,selection,model,precision,recall,f1,accuracy,auc_roc,tn,fp,fn,tp,params,pipeline,samplers,kus
0,FunctionTransformer(),SimpleImputer(),StandardScaler(),FunctionTransformer(),KNeighborsClassifier(),0.1388888888888889,0.03875968992248062,0.0606060606060606,0.8102815177478581,0.4968507751937985,657,31,124,5,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', StandardScaler()), ('selection', FunctionTransformer()), ('model', KNeighborsClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': StandardScaler(), 'selection': FunctionTransformer(), 'model': KNeighborsClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__copy': True, 'scaling__with_mean': True, 'scaling__with_std': True, 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'model__algorithm': 'auto', 'model__leaf_size': 30, 'model__metric': 'minkowski', 'model__metric_params': None, 'model__n_jobs': None, 'model__n_neighbors': 5, 'model__p': 2, 'model__weights': 'uniform'}",noSampling,,
1,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),KNeighborsClassifier(),0.14285714285714285,0.031007751937984496,0.050955414012738856,0.817625458996328,0.498062015503876,664,24,125,4,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('model', KNeighborsClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'model': KNeighborsClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'model__algorithm': 'auto', 'model__leaf_size': 30, 'model__metric': 'minkowski', 'model__metric_params': None, 'model__n_jobs': None, 'model__n_neighbors': 5, 'model__p': 2, 'model__weights': 'uniform'}",noSampling,,
2,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),RandomForestClassifier(random_state=42),0.041666666666666664,0.015503875968992248,0.02259887005649717,0.7882496940024479,0.4743217054263566,642,46,127,2,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('model', RandomForestClassifier(random_state=42))], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'model': RandomForestClassifier(random_state=42), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'model__bootstrap': True, 'model__ccp_alpha': 0.0, 'model__class_weight': None, 'model__criterion': 'gini', 'model__max_depth': None, 'model__max_features': 'sqrt', 'model__max_leaf_nodes': None, 'model__max_samples': None, 'model__min_impurity_decrease': 0.0, 'model__min_samples_leaf': 1, 'model__min_samples_split': 2, 'model__min_weight_fraction_leaf': 0.0, 'model__n_estimators': 100, 'model__n_jobs': None, 'model__oob_score': False, 'model__random_state': 42, 'model__verbose': 0, 'model__warm_start': False}",noSampling,,
3,FunctionTransformer(),SimpleImputer(),StandardScaler(),FunctionTransformer(),RandomForestClassifier(random_state=42),0.0425531914893617,0.015503875968992248,0.022727272727272728,0.7894736842105263,0.4750484496124031,643,45,127,2,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', StandardScaler()), ('selection', FunctionTransformer()), ('model', RandomForestClassifier(random_state=42))], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': StandardScaler(), 'selection': FunctionTransformer(), 'model': RandomForestClassifier(random_state=42), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__copy': True, 'scaling__with_mean': True, 'scaling__with_std': True, 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'model__bootstrap': True, 'model__ccp_alpha': 0.0, 'model__class_weight': None, 'model__criterion': 'gini', 'model__max_depth': None, 'model__max_features': 'sqrt', 'model__max_leaf_nodes': None, 'model__max_samples': None, 'model__min_impurity_decrease': 0.0, 'model__min_samples_leaf': 1, 'model__min_samples_split': 2, 'model__min_weight_fraction_leaf': 0.0, 'model__n_estimators': 100, 'model__n_jobs': None, 'model__oob_score': False, 'model__random_state': 42, 'model__verbose': 0, 'model__warm_start': False}",noSampling,,
4,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),LogisticRegression(),0.0,0.0,0.0,0.8421052631578947,0.5,688,0,129,0,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('model', LogisticRegression())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'model': LogisticRegression(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'model__C': 1.0, 'model__class_weight': None, 'model__dual': False, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__l1_ratio': None, 'model__max_iter': 100, 'model__multi_class': 'auto', 'model__n_jobs': None, 'model__penalty': 'l2', 'model__random_state': None, 'model__solver': 'lbfgs', 'model__tol': 0.0001, 'model__verbose': 0, 'model__warm_start': False}",noSampling,,
5,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),LogisticRegression(),0.16336633663366337,0.7674418604651163,0.2693877551020408,0.3427172582619339,0.5152616279069768,181,507,30,99,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('samplers', SMOTEENN()), ('model', LogisticRegression())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'samplers': SMOTEENN(), 'model': LogisticRegression(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'samplers__enn': None, 'samplers__n_jobs': None, 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'samplers__smote': None, 'model__C': 1.0, 'model__class_weight': None, 'model__dual': False, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__l1_ratio': None, 'model__max_iter': 100, 'model__multi_class': 'auto', 'model__n_jobs': None, 'model__penalty': 'l2', 'model__random_state': None, 'model__solver': 'lbfgs', 'model__tol': 0.0001, 'model__verbose': 0, 'model__warm_start': False}",withSampling,SMOTEENN(),
6,FunctionTransformer(),SimpleImputer(),StandardScaler(),FunctionTransformer(),LogisticRegression(),0.18401937046004843,0.5891472868217055,0.28044280442804426,0.5226438188494492,0.5496608527131783,351,337,53,76,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', StandardScaler()), ('selection', FunctionTransformer()), ('samplers', SMOTEENN()), ('model', LogisticRegression())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': StandardScaler(), 'selection': FunctionTransformer(), 'samplers': SMOTEENN(), 'model': LogisticRegression(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__copy': True, 'scaling__with_mean': True, 'scaling__with_std': True, 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'samplers__enn': None, 'samplers__n_jobs': None, 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'samplers__smote': None, 'model__C': 1.0, 'model__class_weight': None, 'model__dual': False, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__l1_ratio': None, 'model__max_iter': 100, 'model__multi_class': 'auto', 'model__n_jobs': None, 'model__penalty': 'l2', 'model__random_state': None, 'model__solver': 'lbfgs', 'model__tol': 0.0001, 'model__verbose': 0, 'model__warm_start': False}",withSampling,SMOTEENN(),
7,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),KNeighborsClassifier(),0.15264187866927592,0.6046511627906976,0.24374999999999997,0.40758873929008566,0.4876453488372093,255,433,51,78,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('samplers', ClusterCentroids()), ('model', KNeighborsClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'samplers': ClusterCentroids(), 'model': KNeighborsClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'samplers__estimator': None, 'samplers__n_jobs': 'deprecated', 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'samplers__voting': 'auto', 'model__algorithm': 'auto', 'model__leaf_size': 30, 'model__metric': 'minkowski', 'model__metric_params': None, 'model__n_jobs': None, 'model__n_neighbors': 5, 'model__p': 2, 'model__weights': 'uniform'}",withSampling,ClusterCentroids(),
8,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),KNeighborsClassifier(),0.14049586776859505,0.3953488372093023,0.2073170731707317,0.5226438188494492,0.4709302325581396,376,312,78,51,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('samplers', SMOTEENN()), ('model', KNeighborsClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'samplers': SMOTEENN(), 'model': KNeighborsClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'samplers__enn': None, 'samplers__n_jobs': None, 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'samplers__smote': None, 'model__algorithm': 'auto', 'model__leaf_size': 30, 'model__metric': 'minkowski', 'model__metric_params': None, 'model__n_jobs': None, 'model__n_neighbors': 5, 'model__p': 2, 'model__weights': 'uniform'}",withSampling,SMOTEENN(),
9,FunctionTransformer(),SimpleImputer(),StandardScaler(),FunctionTransformer(),KNeighborsClassifier(),0.15619047619047619,0.6356589147286822,0.25076452599388377,0.40024479804161567,0.4958817829457365,245,443,47,82,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', StandardScaler()), ('selection', FunctionTransformer()), ('samplers', ClusterCentroids()), ('model', KNeighborsClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': StandardScaler(), 'selection': FunctionTransformer(), 'samplers': ClusterCentroids(), 'model': KNeighborsClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__copy': True, 'scaling__with_mean': True, 'scaling__with_std': True, 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'samplers__estimator': None, 'samplers__n_jobs': 'deprecated', 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'samplers__voting': 'auto', 'model__algorithm': 'auto', 'model__leaf_size': 30, 'model__metric': 'minkowski', 'model__metric_params': None, 'model__n_jobs': None, 'model__n_neighbors': 5, 'model__p': 2, 'model__weights': 'uniform'}",withSampling,ClusterCentroids(),
10,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),RandomForestClassifier(random_state=42),0.1577424023154848,0.8449612403100775,0.2658536585365854,0.2631578947368421,0.499515503875969,106,582,20,109,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})), ('model', RandomForestClassifier(random_state=42))], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4}), 'model': RandomForestClassifier(random_state=42), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7faa6cf8d6c0>, 'kus__kw_args': {'k': 4, 'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'model__bootstrap': True, 'model__ccp_alpha': 0.0, 'model__class_weight': None, 'model__criterion': 'gini', 'model__max_depth': None, 'model__max_features': 'sqrt', 'model__max_leaf_nodes': None, 'model__max_samples': None, 'model__min_impurity_decrease': 0.0, 'model__min_samples_leaf': 1, 'model__min_samples_split': 2, 'model__min_weight_fraction_leaf': 0.0, 'model__n_estimators': 100, 'model__n_jobs': None, 'model__oob_score': False, 'model__random_state': 42, 'model__verbose': 0, 'model__warm_start': False}",kus,,"FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})"
11,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),LogisticRegression(),0.1588921282798834,0.8449612403100775,0.2674846625766871,0.2692778457772338,0.5031492248062015,111,577,20,109,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})), ('model', LogisticRegression())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4}), 'model': LogisticRegression(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7faa6cf8d6c0>, 'kus__kw_args': {'k': 4, 'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'model__C': 1.0, 'model__class_weight': None, 'model__dual': False, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__l1_ratio': None, 'model__max_iter': 100, 'model__multi_class': 'auto', 'model__n_jobs': None, 'model__penalty': 'l2', 'model__random_state': None, 'model__solver': 'lbfgs', 'model__tol': 0.0001, 'model__verbose': 0, 'model__warm_start': False}",kus,,"FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})"
12,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),KNeighborsClassifier(),0.1590909090909091,0.813953488372093,0.2661596958174905,0.2913096695226438,0.5036337209302326,133,555,24,105,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})), ('model', KNeighborsClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4}), 'model': KNeighborsClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7faa6cf8d6c0>, 'kus__kw_args': {'k': 4, 'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'model__algorithm': 'auto', 'model__leaf_size': 30, 'model__metric': 'minkowski', 'model__metric_params': None, 'model__n_jobs': None, 'model__n_neighbors': 5, 'model__p': 2, 'model__weights': 'uniform'}",kus,,"FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})"
13,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),MLPClassifier(),0.1586608442503639,0.8449612403100775,0.26715686274509803,0.26805385556915545,0.5024224806201549,110,578,20,109,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})), ('model', MLPClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4}), 'model': MLPClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7faa6cf8d6c0>, 'kus__kw_args': {'k': 4, 'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'model__activation': 'relu', 'model__alpha': 0.0001, 'model__batch_size': 'auto', 'model__beta_1': 0.9, 'model__beta_2': 0.999, 'model__early_stopping': False, 'model__epsilon': 1e-08, 'model__hidden_layer_sizes': (100,), 'model__learning_rate': 'constant', 'model__learning_rate_init': 0.001, 'model__max_fun': 15000, 'model__max_iter': 200, 'model__momentum': 0.9, 'model__n_iter_no_change': 10, 'model__nesterovs_momentum': True, 'model__power_t': 0.5, 'model__random_state': None, 'model__shuffle': True, 'model__solver': 'adam', 'model__tol': 0.0001, 'model__validation_fraction': 0.1, 'model__verbose': False, 'model__warm_start': False}",kus,,"FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})"
14,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),LinearSVC(),0.16129032258064516,0.8527131782945736,0.27127003699136865,0.2766217870257038,0.5106589147286821,116,572,19,110,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})), ('model', LinearSVC())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4}), 'model': LinearSVC(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7faa6cf8d6c0>, 'kus__kw_args': {'k': 4, 'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'model__C': 1.0, 'model__class_weight': None, 'model__dual': True, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__loss': 'squared_hinge', 'model__max_iter': 1000, 'model__multi_class': 'ovr', 'model__penalty': 'l2', 'model__random_state': None, 'model__tol': 0.0001, 'model__verbose': 0}",kus,,"FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})"
15,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),RandomForestClassifier(random_state=42),0.157514450867052,0.8449612403100775,0.2655298416565164,0.26193390452876375,0.49878875968992253,105,583,20,109,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})), ('samplers', ClusterCentroids()), ('model', RandomForestClassifier(random_state=42))], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4}), 'samplers': ClusterCentroids(), 'model': RandomForestClassifier(random_state=42), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7faa6cf8d6c0>, 'kus__kw_args': {'k': 4, 'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'samplers__estimator': None, 'samplers__n_jobs': 'deprecated', 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'samplers__voting': 'auto', 'model__bootstrap': True, 'model__ccp_alpha': 0.0, 'model__class_weight': None, 'model__criterion': 'gini', 'model__max_depth': None, 'model__max_features': 'sqrt', 'model__max_leaf_nodes': None, 'model__max_samples': None, 'model__min_impurity_decrease': 0.0, 'model__min_samples_leaf': 1, 'model__min_samples_split': 2, 'model__min_weight_fraction_leaf': 0.0, 'model__n_estimators': 100, 'model__n_jobs': None, 'model__oob_score': False, 'model__random_state': 42, 'model__verbose': 0, 'model__warm_start': False}",kusWithSampling,ClusterCentroids(),"FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})"
16,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),RandomForestClassifier(random_state=42),0.15797101449275364,0.8449612403100775,0.2661782661782661,0.26438188494492043,0.5002422480620154,107,581,20,109,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})), ('samplers', RandomOverSampler()), ('model', RandomForestClassifier(random_state=42))], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4}), 'samplers': RandomOverSampler(), 'model': RandomForestClassifier(random_state=42), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7faa6cf8d6c0>, 'kus__kw_args': {'k': 4, 'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'samplers__shrinkage': None, 'model__bootstrap': True, 'model__ccp_alpha': 0.0, 'model__class_weight': None, 'model__criterion': 'gini', 'model__max_depth': None, 'model__max_features': 'sqrt', 'model__max_leaf_nodes': None, 'model__max_samples': None, 'model__min_impurity_decrease': 0.0, 'model__min_samples_leaf': 1, 'model__min_samples_split': 2, 'model__min_weight_fraction_leaf': 0.0, 'model__n_estimators': 100, 'model__n_jobs': None, 'model__oob_score': False, 'model__random_state': 42, 'model__verbose': 0, 'model__warm_start': False}",kusWithSampling,RandomOverSampler(),"FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})"
17,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),RandomForestClassifier(random_state=42),0.15820029027576196,0.8449612403100775,0.26650366748166254,0.26560587515299877,0.500968992248062,108,580,20,109,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})), ('samplers', SMOTE()), ('model', RandomForestClassifier(random_state=42))], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4}), 'samplers': SMOTE(), 'model': RandomForestClassifier(random_state=42), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7faa6cf8d6c0>, 'kus__kw_args': {'k': 4, 'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'samplers__k_neighbors': 5, 'samplers__n_jobs': None, 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'model__bootstrap': True, 'model__ccp_alpha': 0.0, 'model__class_weight': None, 'model__criterion': 'gini', 'model__max_depth': None, 'model__max_features': 'sqrt', 'model__max_leaf_nodes': None, 'model__max_samples': None, 'model__min_impurity_decrease': 0.0, 'model__min_samples_leaf': 1, 'model__min_samples_split': 2, 'model__min_weight_fraction_leaf': 0.0, 'model__n_estimators': 100, 'model__n_jobs': None, 'model__oob_score': False, 'model__random_state': 42, 'model__verbose': 0, 'model__warm_start': False}",kusWithSampling,SMOTE(),"FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})"
18,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),RandomForestClassifier(random_state=42),0.1577424023154848,0.8449612403100775,0.2658536585365854,0.2631578947368421,0.499515503875969,106,582,20,109,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})), ('samplers', RandomUnderSampler()), ('model', RandomForestClassifier(random_state=42))], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4}), 'samplers': RandomUnderSampler(), 'model': RandomForestClassifier(random_state=42), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7faa6cf8d6c0>, 'kus__kw_args': {'k': 4, 'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'samplers__random_state': None, 'samplers__replacement': False, 'samplers__sampling_strategy': 'auto', 'model__bootstrap': True, 'model__ccp_alpha': 0.0, 'model__class_weight': None, 'model__criterion': 'gini', 'model__max_depth': None, 'model__max_features': 'sqrt', 'model__max_leaf_nodes': None, 'model__max_samples': None, 'model__min_impurity_decrease': 0.0, 'model__min_samples_leaf': 1, 'model__min_samples_split': 2, 'model__min_weight_fraction_leaf': 0.0, 'model__n_estimators': 100, 'model__n_jobs': None, 'model__oob_score': False, 'model__random_state': 42, 'model__verbose': 0, 'model__warm_start': False}",kusWithSampling,RandomUnderSampler(),"FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})"
19,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),RandomForestClassifier(random_state=42),0.15843023255813954,0.8449612403100775,0.26682986536107717,0.2668298653610771,0.5016957364341085,109,579,20,109,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})), ('samplers', SMOTETomek()), ('model', RandomForestClassifier(random_state=42))], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4}), 'samplers': SMOTETomek(), 'model': RandomForestClassifier(random_state=42), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7faa6cf8d6c0>, 'kus__kw_args': {'k': 4, 'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'samplers__n_jobs': None, 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'samplers__smote': None, 'samplers__tomek': None, 'model__bootstrap': True, 'model__ccp_alpha': 0.0, 'model__class_weight': None, 'model__criterion': 'gini', 'model__max_depth': None, 'model__max_features': 'sqrt', 'model__max_leaf_nodes': None, 'model__max_samples': None, 'model__min_impurity_decrease': 0.0, 'model__min_samples_leaf': 1, 'model__min_samples_split': 2, 'model__min_weight_fraction_leaf': 0.0, 'model__n_estimators': 100, 'model__n_jobs': None, 'model__oob_score': False, 'model__random_state': 42, 'model__verbose': 0, 'model__warm_start': False}",kusWithSampling,SMOTETomek(),"FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})"
