,drop,replacement,scaling,selection,model,precision,recall,f1,accuracy,auc_roc,tn,fp,fn,tp,params,pipeline,samplers,kus
0,FunctionTransformer(),SimpleImputer(),StandardScaler(),FunctionTransformer(),KNeighborsClassifier(),0.5736434108527132,0.1436893203883495,0.2298136645962733,0.848132271892223,0.5618482952359778,2696,55,441,74,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', StandardScaler()), ('selection', FunctionTransformer()), ('model', KNeighborsClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': StandardScaler(), 'selection': FunctionTransformer(), 'model': KNeighborsClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__copy': True, 'scaling__with_mean': True, 'scaling__with_std': True, 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'model__algorithm': 'auto', 'model__leaf_size': 30, 'model__metric': 'minkowski', 'model__metric_params': None, 'model__n_jobs': None, 'model__n_neighbors': 5, 'model__p': 2, 'model__weights': 'uniform'}",noSampling,,
1,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),KNeighborsClassifier(),0.5583333333333333,0.13009708737864079,0.2110236220472441,0.846601347213717,0.5554156829114215,2698,53,448,67,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('model', KNeighborsClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'model': KNeighborsClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'model__algorithm': 'auto', 'model__leaf_size': 30, 'model__metric': 'minkowski', 'model__metric_params': None, 'model__n_jobs': None, 'model__n_neighbors': 5, 'model__p': 2, 'model__weights': 'uniform'}",noSampling,,
2,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),RandomForestClassifier(random_state=42),0.9916666666666667,0.9242718446601942,0.9567839195979899,0.98683404776485,0.961408913969501,2747,4,39,476,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('model', RandomForestClassifier(random_state=42))], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'model': RandomForestClassifier(random_state=42), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'model__bootstrap': True, 'model__ccp_alpha': 0.0, 'model__class_weight': None, 'model__criterion': 'gini', 'model__max_depth': None, 'model__max_features': 'sqrt', 'model__max_leaf_nodes': None, 'model__max_samples': None, 'model__min_impurity_decrease': 0.0, 'model__min_samples_leaf': 1, 'model__min_samples_split': 2, 'model__min_weight_fraction_leaf': 0.0, 'model__n_estimators': 100, 'model__n_jobs': None, 'model__oob_score': False, 'model__random_state': 42, 'model__verbose': 0, 'model__warm_start': False}",noSampling,,
3,FunctionTransformer(),SimpleImputer(),StandardScaler(),FunctionTransformer(),RandomForestClassifier(random_state=42),0.9916666666666667,0.9242718446601942,0.9567839195979899,0.98683404776485,0.961408913969501,2747,4,39,476,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', StandardScaler()), ('selection', FunctionTransformer()), ('model', RandomForestClassifier(random_state=42))], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': StandardScaler(), 'selection': FunctionTransformer(), 'model': RandomForestClassifier(random_state=42), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__copy': True, 'scaling__with_mean': True, 'scaling__with_std': True, 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'model__bootstrap': True, 'model__ccp_alpha': 0.0, 'model__class_weight': None, 'model__criterion': 'gini', 'model__max_depth': None, 'model__max_features': 'sqrt', 'model__max_leaf_nodes': None, 'model__max_samples': None, 'model__min_impurity_decrease': 0.0, 'model__min_samples_leaf': 1, 'model__min_samples_split': 2, 'model__min_weight_fraction_leaf': 0.0, 'model__n_estimators': 100, 'model__n_jobs': None, 'model__oob_score': False, 'model__random_state': 42, 'model__verbose': 0, 'model__warm_start': False}",noSampling,,
4,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),LogisticRegression(),0.0,0.0,0.0,0.8423147581139008,0.5,2751,0,515,0,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('model', LogisticRegression())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'model': LogisticRegression(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'model__C': 1.0, 'model__class_weight': None, 'model__dual': False, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__l1_ratio': None, 'model__max_iter': 100, 'model__multi_class': 'auto', 'model__n_jobs': None, 'model__penalty': 'l2', 'model__random_state': None, 'model__solver': 'lbfgs', 'model__tol': 0.0001, 'model__verbose': 0, 'model__warm_start': False}",noSampling,,
5,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),LogisticRegression(),0.17036124794745483,0.8058252427184466,0.28126058963063366,0.3505817513778322,0.5355916471680201,730,2021,100,415,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('samplers', SMOTEENN()), ('model', LogisticRegression())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'samplers': SMOTEENN(), 'model': LogisticRegression(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'samplers__enn': None, 'samplers__n_jobs': None, 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'samplers__smote': None, 'model__C': 1.0, 'model__class_weight': None, 'model__dual': False, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__l1_ratio': None, 'model__max_iter': 100, 'model__multi_class': 'auto', 'model__n_jobs': None, 'model__penalty': 'l2', 'model__random_state': None, 'model__solver': 'lbfgs', 'model__tol': 0.0001, 'model__verbose': 0, 'model__warm_start': False}",withSampling,SMOTEENN(),
6,FunctionTransformer(),SimpleImputer(),StandardScaler(),FunctionTransformer(),LogisticRegression(),0.180622009569378,0.5864077669902913,0.2761774119798811,0.5153092467850582,0.5442035199909653,1381,1370,213,302,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', StandardScaler()), ('selection', FunctionTransformer()), ('samplers', SMOTEENN()), ('model', LogisticRegression())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': StandardScaler(), 'selection': FunctionTransformer(), 'samplers': SMOTEENN(), 'model': LogisticRegression(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__copy': True, 'scaling__with_mean': True, 'scaling__with_std': True, 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'samplers__enn': None, 'samplers__n_jobs': None, 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'samplers__smote': None, 'model__C': 1.0, 'model__class_weight': None, 'model__dual': False, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__l1_ratio': None, 'model__max_iter': 100, 'model__multi_class': 'auto', 'model__n_jobs': None, 'model__penalty': 'l2', 'model__random_state': None, 'model__solver': 'lbfgs', 'model__tol': 0.0001, 'model__verbose': 0, 'model__warm_start': False}",withSampling,SMOTEENN(),
7,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),KNeighborsClassifier(),0.1869881710646042,0.7980582524271844,0.3029856247696277,0.42100428658909983,0.5742381411172637,964,1787,104,411,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('samplers', ClusterCentroids()), ('model', KNeighborsClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'samplers': ClusterCentroids(), 'model': KNeighborsClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'samplers__estimator': None, 'samplers__n_jobs': 'deprecated', 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'samplers__voting': 'auto', 'model__algorithm': 'auto', 'model__leaf_size': 30, 'model__metric': 'minkowski', 'model__metric_params': None, 'model__n_jobs': None, 'model__n_neighbors': 5, 'model__p': 2, 'model__weights': 'uniform'}",withSampling,ClusterCentroids(),
8,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),KNeighborsClassifier(),0.2737940026075619,0.8155339805825242,0.40995607613469986,0.6298224127372933,0.7052951618652352,1637,1114,95,420,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('samplers', SMOTEENN()), ('model', KNeighborsClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'samplers': SMOTEENN(), 'model': KNeighborsClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'samplers__enn': None, 'samplers__n_jobs': None, 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'samplers__smote': None, 'model__algorithm': 'auto', 'model__leaf_size': 30, 'model__metric': 'minkowski', 'model__metric_params': None, 'model__n_jobs': None, 'model__n_neighbors': 5, 'model__p': 2, 'model__weights': 'uniform'}",withSampling,SMOTEENN(),
9,FunctionTransformer(),SimpleImputer(),StandardScaler(),FunctionTransformer(),KNeighborsClassifier(),0.19222271321254972,0.8446601941747572,0.31317494600431967,0.41579914268218005,0.5900872762949395,923,1828,80,435,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', StandardScaler()), ('selection', FunctionTransformer()), ('samplers', ClusterCentroids()), ('model', KNeighborsClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': StandardScaler(), 'selection': FunctionTransformer(), 'samplers': ClusterCentroids(), 'model': KNeighborsClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__copy': True, 'scaling__with_mean': True, 'scaling__with_std': True, 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'samplers__estimator': None, 'samplers__n_jobs': 'deprecated', 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'samplers__voting': 'auto', 'model__algorithm': 'auto', 'model__leaf_size': 30, 'model__metric': 'minkowski', 'model__metric_params': None, 'model__n_jobs': None, 'model__n_neighbors': 5, 'model__p': 2, 'model__weights': 'uniform'}",withSampling,ClusterCentroids(),
10,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),RandomForestClassifier(random_state=42),0.1838340486409156,0.9980582524271845,0.31048021745696164,0.3009797917942437,0.5842708564934904,469,2282,1,514,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})), ('model', RandomForestClassifier(random_state=42))], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4}), 'model': RandomForestClassifier(random_state=42), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7faa6cf8d6c0>, 'kus__kw_args': {'k': 4, 'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'model__bootstrap': True, 'model__ccp_alpha': 0.0, 'model__class_weight': None, 'model__criterion': 'gini', 'model__max_depth': None, 'model__max_features': 'sqrt', 'model__max_leaf_nodes': None, 'model__max_samples': None, 'model__min_impurity_decrease': 0.0, 'model__min_samples_leaf': 1, 'model__min_samples_split': 2, 'model__min_weight_fraction_leaf': 0.0, 'model__n_estimators': 100, 'model__n_jobs': None, 'model__oob_score': False, 'model__random_state': 42, 'model__verbose': 0, 'model__warm_start': False}",kus,,"FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})"
11,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),LogisticRegression(),0.16715758468335787,0.8815533980582524,0.281027545651501,0.2887323943661972,0.5296534711120051,489,2262,61,454,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})), ('model', LogisticRegression())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4}), 'model': LogisticRegression(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7faa6cf8d6c0>, 'kus__kw_args': {'k': 4, 'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'model__C': 1.0, 'model__class_weight': None, 'model__dual': False, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__l1_ratio': None, 'model__max_iter': 100, 'model__multi_class': 'auto', 'model__n_jobs': None, 'model__penalty': 'l2', 'model__random_state': None, 'model__solver': 'lbfgs', 'model__tol': 0.0001, 'model__verbose': 0, 'model__warm_start': False}",kus,,"FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})"
12,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),KNeighborsClassifier(),0.17035060975609756,0.8679611650485437,0.2848040777317617,0.3126148193508879,0.5383062822698189,574,2177,68,447,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})), ('model', KNeighborsClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4}), 'model': KNeighborsClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7faa6cf8d6c0>, 'kus__kw_args': {'k': 4, 'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'model__algorithm': 'auto', 'model__leaf_size': 30, 'model__metric': 'minkowski', 'model__metric_params': None, 'model__n_jobs': None, 'model__n_neighbors': 5, 'model__p': 2, 'model__weights': 'uniform'}",kus,,"FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})"
13,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),MLPClassifier(),0.16855991205569806,0.8932038834951457,0.2836004932182491,0.288426209430496,0.5342064491994085,482,2269,55,460,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})), ('model', MLPClassifier())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4}), 'model': MLPClassifier(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7faa6cf8d6c0>, 'kus__kw_args': {'k': 4, 'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'model__activation': 'relu', 'model__alpha': 0.0001, 'model__batch_size': 'auto', 'model__beta_1': 0.9, 'model__beta_2': 0.999, 'model__early_stopping': False, 'model__epsilon': 1e-08, 'model__hidden_layer_sizes': (100,), 'model__learning_rate': 'constant', 'model__learning_rate_init': 0.001, 'model__max_fun': 15000, 'model__max_iter': 200, 'model__momentum': 0.9, 'model__n_iter_no_change': 10, 'model__nesterovs_momentum': True, 'model__power_t': 0.5, 'model__random_state': None, 'model__shuffle': True, 'model__solver': 'adam', 'model__tol': 0.0001, 'model__validation_fraction': 0.1, 'model__verbose': False, 'model__warm_start': False}",kus,,"FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})"
14,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),LinearSVC(),0.16722408026755853,0.8737864077669902,0.280723643169058,0.29393753827311697,0.5295867698595038,510,2241,65,450,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})), ('model', LinearSVC())], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4}), 'model': LinearSVC(), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7faa6cf8d6c0>, 'kus__kw_args': {'k': 4, 'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'model__C': 1.0, 'model__class_weight': None, 'model__dual': True, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__loss': 'squared_hinge', 'model__max_iter': 1000, 'model__multi_class': 'ovr', 'model__penalty': 'l2', 'model__random_state': None, 'model__tol': 0.0001, 'model__verbose': 0}",kus,,"FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})"
15,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),RandomForestClassifier(random_state=42),0.1837026447462473,0.9980582524271845,0.31029278599456683,0.3003674219228414,0.5839073523131924,467,2284,1,514,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})), ('samplers', ClusterCentroids()), ('model', RandomForestClassifier(random_state=42))], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4}), 'samplers': ClusterCentroids(), 'model': RandomForestClassifier(random_state=42), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7faa6cf8d6c0>, 'kus__kw_args': {'k': 4, 'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'samplers__estimator': None, 'samplers__n_jobs': 'deprecated', 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'samplers__voting': 'auto', 'model__bootstrap': True, 'model__ccp_alpha': 0.0, 'model__class_weight': None, 'model__criterion': 'gini', 'model__max_depth': None, 'model__max_features': 'sqrt', 'model__max_leaf_nodes': None, 'model__max_samples': None, 'model__min_impurity_decrease': 0.0, 'model__min_samples_leaf': 1, 'model__min_samples_split': 2, 'model__min_weight_fraction_leaf': 0.0, 'model__n_estimators': 100, 'model__n_jobs': None, 'model__oob_score': False, 'model__random_state': 42, 'model__verbose': 0, 'model__warm_start': False}",kusWithSampling,ClusterCentroids(),"FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})"
16,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),RandomForestClassifier(random_state=42),0.18376832320343225,0.9980582524271845,0.3103864734299517,0.30067360685854255,0.5840891044033414,468,2283,1,514,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})), ('samplers', RandomOverSampler()), ('model', RandomForestClassifier(random_state=42))], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4}), 'samplers': RandomOverSampler(), 'model': RandomForestClassifier(random_state=42), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7faa6cf8d6c0>, 'kus__kw_args': {'k': 4, 'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'samplers__shrinkage': None, 'model__bootstrap': True, 'model__ccp_alpha': 0.0, 'model__class_weight': None, 'model__criterion': 'gini', 'model__max_depth': None, 'model__max_features': 'sqrt', 'model__max_leaf_nodes': None, 'model__max_samples': None, 'model__min_impurity_decrease': 0.0, 'model__min_samples_leaf': 1, 'model__min_samples_split': 2, 'model__min_weight_fraction_leaf': 0.0, 'model__n_estimators': 100, 'model__n_jobs': None, 'model__oob_score': False, 'model__random_state': 42, 'model__verbose': 0, 'model__warm_start': False}",kusWithSampling,RandomOverSampler(),"FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})"
17,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),RandomForestClassifier(random_state=42),0.1837026447462473,0.9980582524271845,0.31029278599456683,0.3003674219228414,0.5839073523131924,467,2284,1,514,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})), ('samplers', SMOTE()), ('model', RandomForestClassifier(random_state=42))], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4}), 'samplers': SMOTE(), 'model': RandomForestClassifier(random_state=42), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7faa6cf8d6c0>, 'kus__kw_args': {'k': 4, 'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'samplers__k_neighbors': 5, 'samplers__n_jobs': None, 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'model__bootstrap': True, 'model__ccp_alpha': 0.0, 'model__class_weight': None, 'model__criterion': 'gini', 'model__max_depth': None, 'model__max_features': 'sqrt', 'model__max_leaf_nodes': None, 'model__max_samples': None, 'model__min_impurity_decrease': 0.0, 'model__min_samples_leaf': 1, 'model__min_samples_split': 2, 'model__min_weight_fraction_leaf': 0.0, 'model__n_estimators': 100, 'model__n_jobs': None, 'model__oob_score': False, 'model__random_state': 42, 'model__verbose': 0, 'model__warm_start': False}",kusWithSampling,SMOTE(),"FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})"
18,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),RandomForestClassifier(random_state=42),0.1824372759856631,0.9883495145631068,0.30801815431164903,0.29975505205143904,0.5795982396516006,470,2281,6,509,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})), ('samplers', RandomUnderSampler()), ('model', RandomForestClassifier(random_state=42))], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4}), 'samplers': RandomUnderSampler(), 'model': RandomForestClassifier(random_state=42), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7faa6cf8d6c0>, 'kus__kw_args': {'k': 4, 'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'samplers__random_state': None, 'samplers__replacement': False, 'samplers__sampling_strategy': 'auto', 'model__bootstrap': True, 'model__ccp_alpha': 0.0, 'model__class_weight': None, 'model__criterion': 'gini', 'model__max_depth': None, 'model__max_features': 'sqrt', 'model__max_leaf_nodes': None, 'model__max_samples': None, 'model__min_impurity_decrease': 0.0, 'model__min_samples_leaf': 1, 'model__min_samples_split': 2, 'model__min_weight_fraction_leaf': 0.0, 'model__n_estimators': 100, 'model__n_jobs': None, 'model__oob_score': False, 'model__random_state': 42, 'model__verbose': 0, 'model__warm_start': False}",kusWithSampling,RandomUnderSampler(),"FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})"
19,FunctionTransformer(),SimpleImputer(),MinMaxScaler(),FunctionTransformer(),RandomForestClassifier(random_state=42),0.17949640287769783,0.9689320388349515,0.3028831562974203,0.29669320269442745,0.5698895017875231,470,2281,16,499,"{'memory': None, 'steps': [('drop', FunctionTransformer()), ('replacement', SimpleImputer()), ('scaling', MinMaxScaler()), ('selection', FunctionTransformer()), ('kus', FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})), ('samplers', SMOTETomek()), ('model', RandomForestClassifier(random_state=42))], 'verbose': False, 'drop': FunctionTransformer(), 'replacement': SimpleImputer(), 'scaling': MinMaxScaler(), 'selection': FunctionTransformer(), 'kus': FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4}), 'samplers': SMOTETomek(), 'model': RandomForestClassifier(random_state=42), 'drop__accept_sparse': False, 'drop__check_inverse': True, 'drop__feature_names_out': None, 'drop__func': None, 'drop__inv_kw_args': None, 'drop__inverse_func': None, 'drop__kw_args': None, 'drop__validate': False, 'replacement__add_indicator': False, 'replacement__copy': True, 'replacement__fill_value': None, 'replacement__missing_values': nan, 'replacement__strategy': 'mean', 'replacement__verbose': 'deprecated', 'scaling__clip': False, 'scaling__copy': True, 'scaling__feature_range': (0, 1), 'selection__accept_sparse': False, 'selection__check_inverse': True, 'selection__feature_names_out': None, 'selection__func': None, 'selection__inv_kw_args': None, 'selection__inverse_func': None, 'selection__kw_args': None, 'selection__validate': False, 'kus__accept_sparse': True, 'kus__func': <function kMeansUnderSampling at 0x7faa6cf8d6c0>, 'kus__kw_args': {'k': 4, 'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>, 'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>}, 'kus__validate': True, 'samplers__n_jobs': None, 'samplers__random_state': None, 'samplers__sampling_strategy': 'auto', 'samplers__smote': None, 'samplers__tomek': None, 'model__bootstrap': True, 'model__ccp_alpha': 0.0, 'model__class_weight': None, 'model__criterion': 'gini', 'model__max_depth': None, 'model__max_features': 'sqrt', 'model__max_leaf_nodes': None, 'model__max_samples': None, 'model__min_impurity_decrease': 0.0, 'model__min_samples_leaf': 1, 'model__min_samples_split': 2, 'model__min_weight_fraction_leaf': 0.0, 'model__n_estimators': 100, 'model__n_jobs': None, 'model__oob_score': False, 'model__random_state': 42, 'model__verbose': 0, 'model__warm_start': False}",kusWithSampling,SMOTETomek(),"FunctionSampler(func=<function kMeansUnderSampling at 0x7faa6cf8d6c0>,
                kw_args={'clusterMethod': <class 'sklearn_extra.cluster._k_medoids.KMedoids'>,
                         'findBest': <function highestScoreIndex at 0x7faa6cf8d3f0>,
                         'k': 4})"
